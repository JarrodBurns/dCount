// -*- coding: utf-8 -*-

// @autor: Jarrod Burns
// @github: github.com/JarrodBurns
// @version 1.0.0   -   04/12/2021 


#include <iostream>
#include <map>
#include <string>
#include <vector>
#include <windows.h>

class GFX
{
    public:
    const std::string display_column_left = "         |==|*|==|";
    const std::string display_column_middle = "|==|";
    const std::string display_column_right = "|==|*|==|\n";

    const std::string display_top =
    "\n         __              __              __              __                      __              __              __              __\n"
    R"(        /##\     __     /##\     __     /##\     __     /##\     __      __     /##\     __     /##\     __     /##\     __     /##\)"
    "\n"
    R"(        ####    /##\    ####    /##\    ####    /##\    ####    /##\    /##\    ####    /##\    ####    /##\    ####    /##\    ####)"
    "\n"
    // "      ####    ####    ####    ####    ####    ####    ####    ####    ####    ####    ####    ####    ####    ####    ####    ####\n"
    "        ############################################################################################################################\n"
    "        &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n"
    "       /[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\\\n"
    "      /[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\\\n"
    "     /[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\\\n"
    "     |[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|\n"
    R"(     |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|)"
    "\n"
    "         |==|*|==|                       |==|                       |==|                       |==|                       |==|*|==|\n";

    const std::string display_bottom =
    R"(         |==|*|==|%%%%%%%%%%%%%%%%%%%%%%%|==|%%%%%%%%%%%%%%%%%%%%%%%|==|%%%%%%%%%%%%%%%%%%%%%%%|==|%%%%%%%%%%%%%%%%%%%%%%%|==|*|==|)"
    "\n"
    R"(         [@@@@@@@]\/\/\/\/\/\/\/\/\/\/\/\[@@]/\/\/\/\/\/\//\/\/\/\/\[@@]/\/\/\/\/\/\//\/\/\/\/\[@@]/\/\/\/\/\/\//\/\/\/\/\[@@@@@@@])"
    "\n"
    "        {@@@@@@@@@}====================={@@@@}====================={@@@@}====================={@@@@}====================={@@@@@@@@@}\n"
    R"(       [@@@@@@@@@@@]\/\/\/\/\/\/\/\/\/\[@@@@@@]/\/\/\/\/\/\/\/\/\/[@@@@@@]/\/\/\/\/\/\/\/\/\/[@@@@@@]/\/\/\/\/\/\/\/\/\/[@@@@@@@@@@@])"
    "\n"
    "      {@@@@@@@@@@@@@}&&&&&&&&&&&&&&&&&{@@@@@@@@}&&&&&&&&&&&&&&&&&{@@@@@@@@}&&&&&&&&&&&&&&&&&{@@@@@@@@}&&&&&&&&&&&&&&&&&{@@@@@@@@@@@@@}\n"
    "     [@@@@@@@@@@@@@@@]                                                                                                [@@@@@@@@@@@@@@@]\n\n\n\n";

    const std::string ui_top =
    "=======================================================================================================================================\n"
    "---------------------------------------------------------------------------------------------------------------------------------------\n"
    "Commands:                                |Last Input : ";

    const std::string ui_bottom =
    "RESET         R                          |\n"
    "ADD ONE     (any)    ADD TEN     *       |\n"
    "SUB ONE       -      SUB TEN     /       |Your Input : ";

    //rename arabic_numerals
    std::map<int, std::map<int, std::string>> arabic_numerals = 
    {
        {0,
            {
                { 0,        "       000000000       " },
                { 1,        "     00:::::::::00     " },
                { 2,        "   00:::::::::::::00   " },
                { 3,        "  0:::::::000:::::::0  " },
                { 4,        "  0::::::0   0::::::0  " },
                { 5,        "  0:::::0     0:::::0  " },
                { 6,        "  0:::::0     0:::::0  " },
                { 7,        "  0:::::0 000 0:::::0  " },
                { 8,        "  0:::::0 000 0:::::0  " },
                { 9,        "  0:::::0     0:::::0  " },
                { 10,       "  0:::::0     0:::::0  " },
                { 11,       "  0::::::0   0::::::0  " },
                { 12,       "  0:::::::000:::::::0  " },
                { 13,       "   00:::::::::::::00   " },
                { 14,       "     00:::::::::00     " },
                { 15,       "       000000000       " }
            }
        },

        {1,
            {
                { 0,        "       1111111         " },
                { 1,        "      1::::::1         " },
                { 2,        "     1:::::::1         " },
                { 3,        "     111:::::1         " },
                { 4,        "        1::::1         " },
                { 5,        "        1::::1         " },
                { 6,        "        1::::1         " },
                { 7,        "        1::::l         " },
                { 8,        "        1::::l         " },
                { 9,        "        1::::l         " },
                { 10,       "        1::::l         " },
                { 11,       "        1::::l         " },
                { 12,       "     111::::::111      " },
                { 13,       "     1::::::::::1      " },
                { 14,       "     1::::::::::1      " },
                { 15,       "     111111111111      " }
            }
        },

        {2,
            {
                { 0,        "  222222222222222      " },
                { 1,        " 2:::::::::::::::22    " },
                { 2,        " 2::::::222222:::::2   " },
                { 3,        " 2222222     2:::::2   " },
                { 4,        "             2:::::2   " },
                { 5,        "             2:::::2   " },
                { 6,        "          2222::::2    " },
                { 7,        "     22222::::::22     " },
                { 8,        "   22::::::::222       " },
                { 9,        "  2:::::22222          " },
                { 10,       " 2:::::2               " },
                { 11,       " 2:::::2               " },
                { 12,       " 2:::::2       222222  " },
                { 13,       " 2::::::2222222:::::2  " },
                { 14,       " 2::::::::::::::::::2  " },
                { 15,       " 22222222222222222222  " }
            }
        },

        {3,
            {
                { 0,        "   333333333333333     " },
                { 1,        "  3:::::::::::::::33   " },
                { 2,        "  3::::::33333::::::3  " },
                { 3,        "  3333333     3:::::3  " },
                { 4,        "              3:::::3  " },
                { 5,        "              3:::::3  " },
                { 6,        "      33333333:::::3   " },
                { 7,        "      3:::::::::::3    " },
                { 8,        "      33333333:::::3   " },
                { 9,        "              3:::::3  " },
                { 10,       "              3:::::3  " },
                { 11,       "              3:::::3  " },
                { 12,       "  3333333     3:::::3  " },
                { 13,       "  3::::::33333::::::3  " },
                { 14,       "  3:::::::::::::::33   " },
                { 15,       "   333333333333333     " }
            }
        },

        {4,
            {
                { 0,        "         444444444     " },
                { 1,        "        4::::::::4     " },
                { 2,        "       4:::::::::4     " },
                { 3,        "      4::::44::::4     " },
                { 4,        "     4::::4 4::::4     " },
                { 5,        "    4::::4  4::::4     " },
                { 6,        "   4::::4   4::::4     " },
                { 7,        "  4::::444444::::444   " },
                { 8,        "  4::::::::::::::::4   " },
                { 9,        "  4444444444:::::444   " },
                { 10,       "            4::::4     " },
                { 11,       "            4::::4     " },
                { 12,       "            4::::4     " },
                { 13,       "          44::::::44   " },
                { 14,       "          4::::::::4   " },
                { 15,       "          4444444444   " }
            }
        },

        {5,
            {
                { 0,        "  555555555555555555   " },
                { 1,        "  5::::::::::::::::5   " },
                { 2,        "  5::::::::::::::::5   " },
                { 3,        "  5:::::555555555555   " },
                { 4,        "  5:::::5              " },
                { 5,        "  5:::::5              " },
                { 6,        "  5:::::5555555555     " },
                { 7,        "  5:::::::::::::::5    " },
                { 8,        "  555555555555:::::5   " },
                { 9,        "              5:::::5  " },
                { 10,       "              5:::::5  " },
                { 11,       "  5555555     5:::::5  " },
                { 12,       "  5::::::55555::::::5  " },
                { 13,       "   55:::::::::::::55   " },
                { 14,       "     55:::::::::55     " },
                { 15,       "       555555555       " }
            }
        },

        {6,
            {
                { 0,        "          66666666     " },
                { 1,        "         6::::::6      " },
                { 2,        "        6::::::6       " },
                { 3,        "       6::::::6        " },
                { 4,        "      6::::::6         " },
                { 5,        "     6::::::6          " },
                { 6,        "    6::::::6           " },
                { 7,        "   6::::::::66666      " },
                { 8,        "  6::::::::::::::66    " },
                { 9,        "  6::::::66666:::::6   " },
                { 10,       "  6:::::6     6:::::6  " },
                { 11,       "  6:::::6     6:::::6  " },
                { 12,       "  6::::::66666::::::6  " },
                { 13,       "   66:::::::::::::66   " },
                { 14,       "     66:::::::::66     " },
                { 15,       "       666666666       " }
            }
        },

        {7,
            {
                { 0,        "  77777777777777777777 " },
                { 1,        "  7::::::::::::::::::7 " },
                { 2,        "  7::::::::::::::::::7 " },
                { 3,        "  777777777777:::::::7 " },
                { 4,        "             7::::::7  " },
                { 5,        "            7::::::7   " },
                { 6,        "           7::::::7    " },
                { 7,        "          7::::::7     " },
                { 8,        "         7::::::7      " },
                { 9,        "        7::::::7       " },
                { 10,       "       7::::::7        " },
                { 11,       "      7::::::7         " },
                { 12,       "     7::::::7          " },
                { 13,       "    7::::::7           " },
                { 14,       "   7::::::7            " },
                { 15,       "  77777777             " }
            }
        },

        {8,
            {
                { 0,        "       888888888       " },
                { 1,        "     88:::::::::88     " },
                { 2,        "   88:::::::::::::88   " },
                { 3,        "  8::::::88888::::::8  " },
                { 4,        "  8:::::8     8:::::8  " },
                { 5,        "  8:::::8     8:::::8  " },
                { 6,        "   8:::::88888:::::8   " },
                { 7,        "    8:::::::::::::8    " },
                { 8,        "   8:::::88888:::::8   " },
                { 9,        "  8:::::8     8:::::8  " },
                { 10,       "  8:::::8     8:::::8  " },
                { 11,       "  8:::::8     8:::::8  " },
                { 12,       "  8::::::88888::::::8  " },
                { 13,       "   88:::::::::::::88   " },
                { 14,       "     88:::::::::88     " },
                { 15,       "       888888888       " }
            }
        },

        {9,
            {
                { 0,        "       999999999       " },
                { 1,        "     99:::::::::99     " },
                { 2,        "   99:::::::::::::99   " },
                { 3,        "  9::::::99999::::::9  " },
                { 4,        "  9:::::9     9:::::9  " },
                { 5,        "  9:::::9     9:::::9  " },
                { 6,        "   9:::::99999::::::9  " },
                { 7,        "    99::::::::::::::9  " },
                { 8,        "      99999::::::::9   " },
                { 9,        "           9::::::9    " },
                { 10,       "          9::::::9     " },
                { 11,       "         9::::::9      " },
                { 12,       "        9::::::9       " },
                { 13,       "       9::::::9        " },
                { 14,       "      9::::::9         " },
                { 15,       "     99999999          " }
            }
        }
    };

    std::vector<int> display_place_values;
    std::string display_previous_command;


    std::vector<int> get_place_values()
    {
        return display_place_values;
    };


    void set_place_values(std::vector<int> place_values)
    {
        display_place_values = place_values;
    };


    std::string get_previous_command()
    {
        return display_previous_command;
    };


    void set_previous_command(std::string command)
    {
        display_previous_command = command;
    }


    void clear_screen()
        // Clears the canvas for rendering.
        // Should be applied before new screen draws.
        {
            COORD topLeft = { 0, 0 };
            HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
            CONSOLE_SCREEN_BUFFER_INFO screen;
            DWORD written;

            GetConsoleScreenBufferInfo(console, &screen);
            FillConsoleOutputCharacterA(
                console, ' ', screen.dwSize.X *screen.dwSize.Y, topLeft, &written
        );
            FillConsoleOutputAttribute(
                console, FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_BLUE,
                screen.dwSize.X *screen.dwSize.Y, topLeft, &written
        );
            SetConsoleCursorPosition(console, topLeft);
        };


    void draw_screen()
    {
        std::cout << display_top;
        for(int i = 0; i < 16; ++i)
        {
            std::cout << display_column_left << arabic_numerals[display_place_values[0]][i];
            std::cout << display_column_middle << arabic_numerals[display_place_values[1]][i];
            std::cout << display_column_middle << arabic_numerals[display_place_values[2]][i];
            std::cout << display_column_middle << arabic_numerals[display_place_values[3]][i];
            std::cout << display_column_right;

        }
        std::cout << display_bottom;
        std::cout << ui_top << display_previous_command << '\n';
        std::cout << ui_bottom;
    };


    void build_frame()
    // Sets the canvas for drawing.
    {
        HWND console = GetConsoleWindow();
        RECT ConsoleRect;
        GetWindowRect(console, &ConsoleRect);
        MoveWindow(console, ConsoleRect.left, ConsoleRect.top, 1125, 750, TRUE);
        HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);
        CONSOLE_SCREEN_BUFFER_INFO scrBufferInfo;
        GetConsoleScreenBufferInfo(hOut, &scrBufferInfo);
        COORD newSize;
        newSize.X = 136; // scrBufferWidth;
        newSize.Y = 44; //winHeight;
        SetConsoleScreenBufferSize(hOut, newSize);
    }
};
